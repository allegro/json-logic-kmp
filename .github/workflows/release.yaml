name: Release

on:
  workflow_dispatch:
    inputs:
      next_version:
        description: "Next version (if empty - PATCH version will be incremented automatically). Please use semantic versioning, format: 0.0.1"
        required: false

env:
  podspec_file_name: "JsonLogicKMP.podspec"
  spm_file_name: "Package.swift"
  xcframework_zip_name: "JsonLogicKMP.xcframework.zip"
  xcframework_artifact_key: "xcframeworks"

jobs:
  run_tests:
    name: Run tests
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check
        run: ./gradlew detektAll

      - name: Build project
        run: ./gradlew build

  build_xcframework:
    name: Build XCFramework
    runs-on: macos-latest
    needs: [run_tests]
    env:
       umbrella_xcframework_path: "umbrella-framework/build/XCFrameworks/release/JsonLogicKMP.xcframework"
       version_file_name: "JsonLogicConfig.kt"
       version_file_path: "core/src/iosMain/kotlin/"
    outputs:
      sha256: ${{ steps.calculate_checksum.outputs.sha256 }}
      tag: ${{ steps.bump.outputs.next_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Get next tag
        id: "bump"
        uses: allegro-actions/next-version@v1
        with:
          prefix: ""
          force: ${{ github.event.inputs.next_version }}

      - name: Generate volatile iOS version file
        run: |
          VERSION=${{ steps.bump.outputs.next_tag }}
          mkdir -p "${{ env.version_file_path }}"
          echo "object JsonLogicConfig { const val version = \"$VERSION\" }" > "${{ env.version_file_path }}${{ env.version_file_name }}"

      - name: Build XCFramework
        run: ./gradlew assembleJsonLogicKMPXCFramework

      - name: Zip XCFramework
        run: |
          mkdir filesToZip
          mv "${{ env.umbrella_xcframework_path }}" filesToZip
          mv LICENSE filesToZip
          cd filesToZip
          zip -r "../${{ env.xcframework_zip_name }}" *

      - name: Calculate checksum
        id: calculate_checksum
        run: |
          XCFRAMEWORK_SHA256=$(shasum -a 256 ${{ env.xcframework_zip_name }} | awk '{ print $1 }')
          echo "::set-output name=sha256::$XCFRAMEWORK_SHA256"

      - uses: actions/upload-artifact@v2
        with:
          name: "${{ env.xcframework_artifact_key }}"
          path: "${{ env.xcframework_zip_name }}"
          if-no-files-found: error
          retention-days: 1

  create_release_branch:
    name: Create release branch and bump version
    runs-on: ubuntu-latest
    needs: [run_tests, build_xcframework]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Change version in podspec and SPM files
        run: |
          VERSION=${{ needs.build_xcframework.outputs.tag }}
          sed -i -e "s/spec.version.*= .*$/spec\.version      = \"$VERSION\"/g" "${{ env.podspec_file_name }}"
          sed -i -e "s/let version.*= .*$/let version = \"$VERSION\"/g" "${{ env.spm_file_name }}"

      - name: Change SHA256 checksum in podspec and SPM files
        run: |
          XCFRAMEWORK_SHA256="${{ needs.build_xcframework.outputs.sha256 }}"
          sed -i -e "s/:sha256.*=>.*$/:sha256 => \"$XCFRAMEWORK_SHA256\"/g" "${{ env.podspec_file_name }}"
          sed -i -e "s/let checksum.*= .*$/let checksum = \"$XCFRAMEWORK_SHA256\"/g" "${{ env.spm_file_name }}"

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit and push version bump
        run: |
          VERSION=${{ needs.build_xcframework.outputs.tag }}
          BRANCH_NAME=release/$VERSION
          git checkout -b $BRANCH_NAME
          git add "${{ env.podspec_file_name }}"
          git add "${{ env.spm_file_name }}"
          git commit -m "Bump version to: $VERSION"
          git push -u origin $BRANCH_NAME
          git tag $VERSION
          git push origin tag $VERSION

      - name: Create pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "release/${{ needs.build_xcframework.outputs.tag }}"
          destination_branch: "main"
          pr_title: "Bump version to ${{ needs.build_xcframework.outputs.tag }}"
          pr_body: "## Note:\n
            * This pull request is created by workflow ðŸ¤–\n
            ## What:\n
            * bump version to ${{ needs.build_xcframework.outputs.tag }}\n
            * commit tag\n
            * updated podspec file\n
            ## Why:\n
            * New release"
          pr_allow_empty: false
          github_token: ${{ secrets.GITHUB_TOKEN }}

  create_github_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [run_tests, build_xcframework, create_release_branch]
    steps:
      - name: Download XCFramework
        uses: actions/download-artifact@v2
        with:
          name: "${{ env.xcframework_artifact_key }}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ needs.build_xcframework.outputs.tag }}"
          name: "Release ${{ needs.build_xcframework.outputs.tag }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "${{ env.xcframework_zip_name }}"

  publish_to_maven:
    name: Publish to maven
    runs-on: macos-latest
    needs:
      [
        run_tests,
        build_xcframework,
        create_release_branch,
        create_github_release,
      ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "${{ needs.build_xcframework.outputs.tag }}"
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish to maven central
        run: ./gradlew publishJvmPublicationToSonatypeRepository publishKotlinMultiplatformPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository --scan
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PRIVATE_KEY_PASSWORD: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}

  publish_to_cocoapods:
    name: Publish to cocoadpods
    needs:
      [
        run_tests,
        build_xcframework,
        create_release_branch,
        create_github_release,
      ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "${{ needs.build_xcframework.outputs.tag}}"

      - name: Publish to cocoadpods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          pod trunk push "${{ env.podspec_file_name }}" --verbose
