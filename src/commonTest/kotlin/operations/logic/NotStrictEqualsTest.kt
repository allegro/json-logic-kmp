package operations.logic

import LogicOperationTest
import TestInput

class NotStrictEqualsTest : LogicOperationTest(
    testName = "JsonLogic evaluation with only NotStrictEquals operation",
    successResultTestInput = listOf(
        TestInput(expression = mapOf("!==" to listOf(1, 1)), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf(1, "1")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, 2)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, 2)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, "false")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, "true")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, "false")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, listOf("false"))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, listOf(false))), resultValue = true),
        TestInput(
            expression = mapOf("!==" to listOf(emptyList<Any>(), listOf(emptyList<Any>()))),
            resultValue = true
        ),
        TestInput(expression = mapOf("!==" to listOf(emptyList<Any>(), null)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(emptyList(), emptyList<Any>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("null", null)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true, "true")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, null)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(listOf("banana"), null)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(listOf("banana"), true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(listOf("banana"), false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true, false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true, true)), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf(1, listOf("1"))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, listOf(1))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(-1, false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(0, false)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(0, true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(-1, true)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true, true, "false")), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf(1, 0, 1)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1)), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true)), resultValue = true),
        TestInput(expression = mapOf("!==" to true), resultValue = true),
        TestInput(expression = mapOf("!==" to false), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("true")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("banana")), resultValue = true),
        TestInput(expression = mapOf("!==" to "banana"), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null)), resultValue = true),
        TestInput(expression = mapOf("!==" to null), resultValue = true),
        TestInput(expression = mapOf("!==" to ""), resultValue = true),
        TestInput(expression = mapOf("!==" to "     "), resultValue = true),
        TestInput(expression = mapOf("!==" to emptyList<Any>()), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf(emptyList<Any>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, null)), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf(1, listOf(listOf("1")))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("banana", listOf(listOf("banana")))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("banana", listOf("banana", "banana"))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(listOf(null), listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(null, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(0, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(true, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(-1, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(0.5, listOf(null))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("", "")), resultValue = false),
        TestInput(expression = mapOf("!==" to listOf("", "    ")), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("", listOf(""))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(listOf(""), listOf(""))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("", listOf(listOf("")))), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(false, emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(0, emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("0", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("0.0", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(1, emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("1", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("1.0", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf(-1, emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("-1", emptyList<String>())), resultValue = true),
        TestInput(expression = mapOf("!==" to listOf("-1.0", emptyList<String>())), resultValue = true),
    )
)
